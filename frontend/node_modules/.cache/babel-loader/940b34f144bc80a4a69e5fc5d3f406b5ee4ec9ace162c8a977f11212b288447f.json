{"ast":null,"code":"var _jsxFileName = \"C:\\\\YEAR_FOUR_PROJECTS\\\\WEB_DEVELOPMENT\\\\Maclinz_the_code_dealer\\\\REACT_JS\\\\expanse_tracker\\\\frontend\\\\src\\\\Components\\\\Chart\\\\Chart.js\",\n  _s = $RefreshSig$();\n// ! 18 -- For charts\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Line } from 'react-chart-js-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/DateFormat';\n\n// register them so we can use them\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  _s();\n  // call useGlobalContext\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  const data = {\n    // x-label\n    labels: incomes.map(inc => {\n      const {\n        date\n      } = inc;\n      return dateFormat(date);\n    }),\n    datasets: [{\n      label: 'Income',\n      data: [...incomes.map(income => {\n        const {\n          amount\n        } = income;\n        return amount;\n      })],\n      backgroundColor: 'green'\n    }, {\n      label: 'Expenses',\n      data: [...expenses.map(income => {\n        const {\n          amount\n        } = income;\n        return amount;\n      })],\n      backgroundColor: 'green'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"FD0wmpS8gvIkX+imi80kDHo7xkc=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","styled","useGlobalContext","dateFormat","jsxDEV","_jsxDEV","register","_s","incomes","expenses","data","labels","map","inc","date","datasets","label","income","amount","backgroundColor","ChartStyled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["C:/YEAR_FOUR_PROJECTS/WEB_DEVELOPMENT/Maclinz_the_code_dealer/REACT_JS/expanse_tracker/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["// ! 18 -- For charts\r\nimport React from 'react'\r\nimport {Chart as ChartJs, \r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n} from 'chart.js'\r\n\r\nimport {Line} from 'react-chart-js-2'\r\nimport styled from 'styled-components'\r\nimport { useGlobalContext } from '../../context/globalContext'\r\nimport { dateFormat } from '../../utils/DateFormat'\r\n\r\n// register them so we can use them\r\nChartJs.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n)\r\n\r\nfunction Chart() {\r\n\r\n    // call useGlobalContext\r\n    const {incomes, expenses} = useGlobalContext()\r\n\r\n    const data = {\r\n        // x-label\r\n        labels: incomes.map((inc) => {\r\n            const {date} = inc\r\n            return dateFormat(date)\r\n        }),\r\n\r\n        datasets: [\r\n            {\r\n                label: 'Income',\r\n                data: [\r\n                    ...incomes.map((income) => {\r\n                        const {amount} = income\r\n                        return amount\r\n                    })\r\n                ],\r\n                backgroundColor: 'green'\r\n            },\r\n            {\r\n                label: 'Expenses',\r\n                data: [\r\n                    ...expenses.map((income) => {\r\n                        const {amount} = income\r\n                        return amount\r\n                    })\r\n                ],\r\n                backgroundColor: 'green'\r\n            },\r\n        ]\r\n    }\r\n    \r\n    return (\r\n        <ChartStyled>\r\n            <Line />\r\n        </ChartStyled>\r\n    )\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n\r\n`;\r\n\r\nexport default Chart"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,IAAIC,OAAO,EACpBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,QACP,UAAU;AAEjB,SAAQC,IAAI,QAAO,kBAAkB;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAd,OAAO,CAACe,QAAQ,CACZd,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UACJ,CAAC;AAED,SAAST,KAAKA,CAAA,EAAG;EAAAiB,EAAA;EAEb;EACA,MAAM;IAACC,OAAO;IAAEC;EAAQ,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAE9C,MAAMQ,IAAI,GAAG;IACT;IACAC,MAAM,EAAEH,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAK;MACzB,MAAM;QAACC;MAAI,CAAC,GAAGD,GAAG;MAClB,OAAOV,UAAU,CAACW,IAAI,CAAC;IAC3B,CAAC,CAAC;IAEFC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,QAAQ;MACfN,IAAI,EAAE,CACF,GAAGF,OAAO,CAACI,GAAG,CAAEK,MAAM,IAAK;QACvB,MAAM;UAACC;QAAM,CAAC,GAAGD,MAAM;QACvB,OAAOC,MAAM;MACjB,CAAC,CAAC,CACL;MACDC,eAAe,EAAE;IACrB,CAAC,EACD;MACIH,KAAK,EAAE,UAAU;MACjBN,IAAI,EAAE,CACF,GAAGD,QAAQ,CAACG,GAAG,CAAEK,MAAM,IAAK;QACxB,MAAM;UAACC;QAAM,CAAC,GAAGD,MAAM;QACvB,OAAOC,MAAM;MACjB,CAAC,CAAC,CACL;MACDC,eAAe,EAAE;IACrB,CAAC;EAET,CAAC;EAED,oBACId,OAAA,CAACe,WAAW;IAAAC,QAAA,eACRhB,OAAA,CAACL,IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEtB;AAAClB,EAAA,CAzCQjB,KAAK;EAAA,QAGkBY,gBAAgB;AAAA;AAAAwB,EAAA,GAHvCpC,KAAK;AA2Cd,MAAM8B,WAAW,GAAGnB,MAAM,CAAC0B,GAAI;AAC/B;AACA,CAAC;AAACC,GAAA,GAFIR,WAAW;AAIjB,eAAe9B,KAAK;AAAA,IAAAoC,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}