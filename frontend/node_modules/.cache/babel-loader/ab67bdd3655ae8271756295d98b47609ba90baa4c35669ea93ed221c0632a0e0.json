{"ast":null,"code":"var _jsxFileName = \"C:\\\\YEAR_FOUR_PROJECTS\\\\WEB_DEVELOPMENT\\\\Maclinz_the_code_dealer\\\\REACT_JS\\\\expanse_tracker\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ! 13 to access the API\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios'; // because we gonna do some request on our server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // ! calculate INCOMES -- send some data\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n\n    // calling getIncomes to prevent endless data sending for the backend\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n\n    // calling getIncomes to prevent endless data sending for the backend\n    getIncomes();\n  };\n\n  // TOTAL INCOME function\n  const theTotalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome += income.amount;\n    });\n    return totalIncome;\n  };\n\n  // ======================================================================== //\n\n  // ! calculate EXPENSES -- send some data\n  const addExpense = async income => {\n    const response = await axios.post(`${BASE_URL}add-expense`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n\n    // calling getIncomes to prevent endless data sending for the backend\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n\n    // calling getIncomes to prevent endless data sending for the backend\n    getExpenses();\n  };\n\n  // TOTAL INCOME function\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome += income.amount;\n    });\n    return totalIncome;\n  };\n\n  // ======================================================================== //\n\n  const totalBalance = () => {\n    return theTotalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    // sort\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      theTotalIncome,\n      expenses,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","_ref","_s","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncomes","get","console","log","deleteIncome","id","res","delete","theTotalIncome","totalIncome","forEach","amount","addExpense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/YEAR_FOUR_PROJECTS/WEB_DEVELOPMENT/Maclinz_the_code_dealer/REACT_JS/expanse_tracker/frontend/src/context/globalContext.js"],"sourcesContent":["// ! 13 to access the API\r\nimport React, { useContext, useState } from \"react\"\r\nimport axios from 'axios' // because we gonna do some request on our server\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\"\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    \r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    // ! calculate INCOMES -- send some data\r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) => {\r\n                setError(err.response.data.message)\r\n            })\r\n        \r\n        // calling getIncomes to prevent endless data sending for the backend\r\n        getIncomes()\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-incomes`)\r\n        setIncomes(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteIncome = async (id) => {\r\n        const res = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n\r\n        // calling getIncomes to prevent endless data sending for the backend\r\n        getIncomes()\r\n    }\r\n\r\n    // TOTAL INCOME function\r\n    const theTotalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) => {\r\n            totalIncome += income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n    // ======================================================================== //\r\n\r\n    // ! calculate EXPENSES -- send some data\r\n    const addExpense = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-expense`, income)\r\n            .catch((err) => {\r\n                setError(err.response.data.message)\r\n            })\r\n        \r\n        // calling getIncomes to prevent endless data sending for the backend\r\n        getExpenses()\r\n    }\r\n\r\n    const getExpenses = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-expenses`)\r\n        setExpenses(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteExpense = async (id) => {\r\n        const res = await axios.delete(`${BASE_URL}delete-expense/${id}`)\r\n\r\n        // calling getIncomes to prevent endless data sending for the backend\r\n        getExpenses()\r\n    }\r\n\r\n     // TOTAL INCOME function\r\n     const totalExpenses = () => {\r\n        let totalIncome = 0;\r\n        expenses.forEach((income) => {\r\n            totalIncome += income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n    // ======================================================================== //\r\n\r\n    const totalBalance = () => {\r\n        return theTotalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses ]\r\n        // sort\r\n        history.sort((a,b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            theTotalIncome,\r\n\r\n            expenses,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n\r\n            totalBalance\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}